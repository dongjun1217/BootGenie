version: '3.7'

services:
  # Prometheus 서비스
  prometheus:
    image: prom/prometheus  # Prometheus 이미지 사용
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # 호스트의 prometheus.yml을 컨테이너 내로 마운트
      - /var/run/docker.sock:/var/run/docker.sock  # Docker 소켓을 마운트하여 Docker 메트릭 수집
    ports:
      - "9999:9090"  # 호스트의 9999 포트를 컨테이너의 9090 포트로 매핑
    deploy:
      replicas: 1  # Prometheus 인스턴스 하나만 실행
      placement:
        constraints:
          - node.role == manager  # 매니저 노드에서만 실행

  # Grafana 서비스
  grafana:
    image: grafana/grafana  # Grafana 이미지 사용
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning  # Grafana 프로비저닝 디렉토리를 컨테이너 내로 마운트
    ports:
      - "8888:3000"  # 호스트의 8888 포트를 컨테이너의 3000 포트로 매핑
    environment:
      - GF_SECURITY_ADMIN_USER=admin  # Grafana 기본 관리자 사용자 이름
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Grafana 기본 관리자 비밀번호
    deploy:
      replicas: 1  # Grafana 인스턴스 하나만 실행
      placement:
        constraints:
          - node.role == manager  # 매니저 노드에서만 실행

  # cAdvisor 서비스
  cadvisor:
    image: google/cadvisor:latest  # 최신 버전의 cAdvisor 이미지 사용
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Docker 소켓을 마운트하여 컨테이너 정보 수집
      - /sys:/sys  # 시스템 파일 시스템을 마운트하여 시스템 정보 수집
      - /var/lib/docker/:/var/lib/docker  # Docker 데이터 디렉토리를 마운트하여 메타데이터 수집
      - /sys/fs/cgroup:/sys/fs/cgroup:ro  # cgroup 정보를 읽기 전용으로 마운트
      - /sys/fs/cgroup/cpu,cpuacct:/sys/fs/cgroup/cpu,cpuacct:ro  # CPU cgroup 정보 읽기 전용으로 마운트      
    ports:
      - "7777:8080"  # 호스트의 8080 포트를 컨테이너의 8080 포트로 매핑
    deploy:
      replicas: 1  # cAdvisor 인스턴스 하나만 실행
      placement:
        constraints:
          - node.role == manager  # 매니저 노드에서만 실행

  # Node Exporter 서비스
  node-exporter:
    image: prom/node-exporter:latest  # 최신 버전의 Node Exporter 이미지 사용
    ports:
      - "9100:9100"  # 호스트의 9100 포트를 컨테이너의 9100 포트로 매핑
    deploy:
      mode: global  # 모든 워커 노드에서 실행
      placement:
        constraints:
          - node.role == worker  # 워커 노드에서만 실행
